package com.spring.model;
// Generated May 4, 2017 8:08:51 PM by Hibernate Tools 5.2.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "order", catalog = "clothesshop_v5")
public class Order implements java.io.Serializable {

	private Integer id;
	private User user;
	private Double amount;
	private Date orderDate;
	private Date deliveryDate;
	private String address;
	private Boolean isProcessing;
	private Boolean isShipped;
	private Boolean isCancel;
	private Boolean isCompleted;
	private Set<Orderdetail> orderdetails = new HashSet<Orderdetail>(0);

	public Order() {
	}

	public Order(User user, Double amount, Date orderDate, Date deliveryDate, String address, Boolean isProcessing,
			Boolean isShipped, Boolean isCancel, Boolean isCompleted, Set<Orderdetail> orderdetails) {
		this.user = user;
		this.amount = amount;
		this.orderDate = orderDate;
		this.deliveryDate = deliveryDate;
		this.address = address;
		this.isProcessing = isProcessing;
		this.isShipped = isShipped;
		this.isCancel = isCancel;
		this.isCompleted = isCompleted;
		this.orderdetails = orderdetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "Id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "Id_User")
	@JsonIgnore
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "Amount", precision = 22, scale = 0)
	public Double getAmount() {
		return this.amount;
	}

	public void setAmount(Double amount) {
		this.amount = amount;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "OrderDate", length = 19)
	public Date getOrderDate() {
		return this.orderDate;
	}

	public void setOrderDate(Date orderDate) {
		this.orderDate = orderDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DeliveryDate", length = 19)
	public Date getDeliveryDate() {
		return this.deliveryDate;
	}

	public void setDeliveryDate(Date deliveryDate) {
		this.deliveryDate = deliveryDate;
	}

	@Column(name = "Address")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "IsProcessing")
	public Boolean getIsProcessing() {
		return this.isProcessing;
	}

	public void setIsProcessing(Boolean isProcessing) {
		this.isProcessing = isProcessing;
	}

	@Column(name = "IsShipped")
	public Boolean getIsShipped() {
		return this.isShipped;
	}

	public void setIsShipped(Boolean isShipped) {
		this.isShipped = isShipped;
	}

	@Column(name = "IsCancel")
	public Boolean getIsCancel() {
		return this.isCancel;
	}

	public void setIsCancel(Boolean isCancel) {
		this.isCancel = isCancel;
	}

	@Column(name = "IsCompleted")
	public Boolean getIsCompleted() {
		return this.isCompleted;
	}

	public void setIsCompleted(Boolean isCompleted) {
		this.isCompleted = isCompleted;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "order")
	@JsonIgnore
	public Set<Orderdetail> getOrderdetails() {
		return this.orderdetails;
	}

	public void setOrderdetails(Set<Orderdetail> orderdetails) {
		this.orderdetails = orderdetails;
	}

	@Override
	public String toString() {
		return "Order [id=" + id + ", user=" + user + ", amount=" + amount + ", orderDate=" + orderDate
				+ ", deliveryDate=" + deliveryDate + ", address=" + address + ", isProcessing=" + isProcessing
				+ ", isShipped=" + isShipped + ", isCancel=" + isCancel + ", isCompleted=" + isCompleted + "]";
	}

	
	
}
